stages:
  - build
  - test
  - release
  - deploy-staging
  - deploy-production

include:
  - template: Security/SAST.gitlab-ci.yml
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  - project: 'anton-alekseyev/sausage-store'
    file: 'template.gitlab-ci.yml'

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  SAST_EXCLUDED_ANALYZERS: "gosec-sast"

build-code-job:
  stage: build
  cache:
    - key: npm
      paths:
        - frontend/.npm/
  script:
    - cd frontend
    - npm ci --cache .npm --prefer-offline
    - npm run build
    - cd ..
    - mkdir -p $CI_PROJECT_DIR/momo-store-${VERSION}/public_html
    - mv frontend/dist/ $CI_PROJECT_DIR/momo-store-${VERSION}/public_html
  artifacts:
    paths:
      - $CI_PROJECT_DIR/momo-store-${VERSION}/public_html

build-docker-kaniko:
  stage: build
  cache: [ ]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  extends: .docker-registry-auth
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --build-arg VUE_APP_API_URL=/rest
      --cache-copy-layers
      --destination "${CI_REGISTRY_IMAGE}/$DOCKER_FRONTEND_NAME:${VERSION}"
      --cache=true

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner \
        -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT} \
        -Dsonar.sources=. \
        -Dsonar.host.url=${SONARQUBE_URL} \
        -Dsonar.login=${SONAR_LOGIN} \
        -Dsonar.projectName=${SONAR_PROJECT_NAME_FRONT}

upload-release:
  stage: release
  dependencies:
    - build-code-job
  script:
    - tar czvf momo-store-${VERSION}.tar.gz momo-store-${VERSION}/public_html/dist
    - >
      curl -v -u "${NEXUS_REPO_USER}:$(echo $NEXUS_REPO_PASS | base64 -d)" --upload-file momo-store-${VERSION}.tar.gz ${NEXUS_REPO_FRONTEND_URL}/momo-store-frontend/momo-store/$VERSION/momo-store-front-$VERSION.tar.gz

upload-docker-latest:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/$DOCKER_FRONTEND_NAME:$VERSION latest

deploy-helm-staging:
  stage: deploy-staging
  extends: .deploy-helm
  variables:
    MOMO_STORE_URL: $MOMO_STORE_URL_STAGING
    ENVIRONMENT_TYPE: staging
  environment:
    name: momo-frontend-staging
    url: https://$MOMO_STORE_URL_STAGING

deploy-helm-production:
  stage: deploy-production
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
      when: manual
    - when: never
  extends: .deploy-helm
  variables:
    MOMO_STORE_URL: $MOMO_STORE_URL_PRODUCTION
    ENVIRONMENT_TYPE: production
  environment:
    name: momo-frontend-production
    url: https://$MOMO_STORE_URL_PRODUCTION

.deploy-helm:
  image: lwolf/helm-kubectl-docker:v1.21.1-v3.6.0
  before_script:
    - mkdir -p $HOME/.kube
    - echo -n $KUBE_CONFIG | base64 -d > $HOME/.kube/config
    - echo -n $KUBE_CA | base64 -d > $HOME/.kube/ca.pem
  script:
    - helm repo add nexus $NEXUS_REPO_HELM_URL --username ${NEXUS_REPO_USER} --password $(echo $NEXUS_REPO_PASS | base64 -d)
    - helm repo update
    - >
      helm upgrade --install momo-store-$ENVIRONMENT_TYPE \
        --set global.environment=$ENVIRONMENT_TYPE \
        --set frontend.fqdn=${MOMO_STORE_URL} \
        --set secrets.dockerConfigJson=${DOCKER_CONFIG_JSON} \
        --set frontend.image.tag=$VERSION \
        --set frontend.letsencryptEmail=${LETSENCRYPT_EMAIL} \
        --atomic --timeout 15m \
        --namespace momo-store-$ENVIRONMENT_TYPE \
        --reuse-values \
          nexus/momo-store
  after_script:
    - rm $HOME/.kube/config