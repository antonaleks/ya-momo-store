stages:
  - test
  - build
  - release
  - deploy

include:
  - template: Security/SAST.gitlab-ci.yml
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  - project: 'anton-alekseyev/sausage-store'
    file: 'template.gitlab-ci.yml'

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  SAST_EXCLUDED_ANALYZERS: "eslint,nodejs-scan-sast"

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/backend/.go
  before_script:
    - mkdir -p backend/.go
  cache:
    paths:
      - .go/pkg/mod/

format:
  stage: test
  image: golang:1.17
  extends: .go-cache
  script:
    - cd backend
    - go vet ./...
    - go test -v ./...

compile:
  stage: build
  image: golang:1.17
  extends: .go-cache
  script:
    - cd backend
    - mkdir -p $CI_PROJECT_DIR/momo-store-${VERSION}/go-build
    - go build -o $CI_PROJECT_DIR/momo-store-${VERSION}/go-build ./...
  artifacts:
    paths:
      - $CI_PROJECT_DIR/momo-store-${VERSION}/go-build

build-docker-kaniko:
  stage: build
  cache: [ ]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  extends: .docker-registry-auth
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --cache-copy-layers
      --destination "${CI_REGISTRY_IMAGE}/$DOCKER_BACKEND_NAME:${VERSION}"
      --cache=true

gosec-sast:
  extends: .go-cache
  stage: test
  script:
    - cd backend
    - /analyzer run  --target-dir ${CI_PROJECT_DIR}/backend/ --artifact-dir ${CI_PROJECT_DIR}/backend/
  artifacts:
    when: always
    paths:
      - ${CI_PROJECT_DIR}/backend/gl-sast-report.json
    reports:
      sast: gl-sast-report.json

sonarqube-backend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd backend
    - >
      sonar-scanner \
        -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACK} \
        -Dsonar.sources=. \
        -Dsonar.host.url=${SONARQUBE_URL} \
        -Dsonar.login=${SONAR_LOGIN} \
        -Dsonar.projectName=${SONAR_PROJECT_NAME_BACK}

upload-release:
  stage: release
  dependencies:
    - compile
  script:
    - tar czvf momo-store-${VERSION}.tar.gz momo-store-${VERSION}/go-build
    - >
      curl -v -u "${NEXUS_REPO_USER}:$(echo $NEXUS_REPO_PASS | base64 -d)" --upload-file momo-store-${VERSION}.tar.gz ${NEXUS_REPO_BACKEND_URL}/momo-store-backend/momo-store/$VERSION/momo-store-back-$VERSION.tar.gz

upload-docker-latest:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  stage: release
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/$DOCKER_BACKEND_NAME:$VERSION latest