stages:
  - test
  - build
  - release
  - deploy

include:
  - template: Security/SAST.gitlab-ci.yml
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  SAST_EXCLUDED_ANALYZERS: "eslint,nodejs-scan-sast"

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/backend/.go
  before_script:
    - mkdir -p backend/.go
  cache:
    paths:
      - .go/pkg/mod/

format:
  stage: test
  image: golang:1.13
  extends: .go-cache
  script:
    - cd backend
    - go vet ./...
    - go test -v ./...

compile:
  stage: build
  image: golang:1.13
  extends: .go-cache
  script:
    - cd backend
    - mkdir -p $CI_PROJECT_DIR/backend/build/momo-store-${VERSION}
    - go build -o $CI_PROJECT_DIR/backend/build/momo-store-${VERSION} ./...
  artifacts:
    paths:
      - $CI_PROJECT_DIR/backend/build/momo-store-${VERSION}

sonarqube-backend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd backend
    - >
      sonar-scanner \
        -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACK} \
        -Dsonar.sources=. \
        -Dsonar.host.url=${SONARQUBE_URL} \
        -Dsonar.login=${SONAR_LOGIN} \
        -Dsonar.projectName=${SONAR_PROJECT_NAME_BACK}
